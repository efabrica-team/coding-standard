<?xml version="1.0"?>
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="efabrica" xsi:noNamespaceSchemaLocation="../vendor/squizlabs/php_codesniffer/phpcs.xsd">
    <description>eFabrica coding standard.</description>

    <!-- Include the whole PSR-2 standard -->
    <rule ref="PSR2">
        <exclude name="PSR1"/>
        <exclude name="Generic.NamingConventions.UpperCaseConstantName"/>
    </rule>
    <rule ref="PSR1">
        <exclude name="Generic.NamingConventions.UpperCaseConstantName"/>
    </rule>

    <!-- Turn of blank line after namespace declaration - will be check with SlevomatCodingStandard.Namespaces.NamespaceSpacing -->
    <rule ref="PSR2.Namespaces.NamespaceDeclaration.BlankLineAfter">
        <severity>0</severity>
    </rule>

    <!-- Overriden from PSR2 where blank lines are ignored -->
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace">
        <properties>
            <property name="ignoreBlankLines" value="false"/>
        </properties>
    </rule>

    <!-- Overriden from PSR2 where severity was 0 -->
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EmptyLines">
        <severity>5</severity>
    </rule>

    <!-- One blank line before and after each function except first and last -->
    <rule ref="Squiz.WhiteSpace.FunctionSpacing">
        <properties>
            <property name="spacing" value="1"/>
            <property name="spacingBeforeFirst" value="0"/>
            <property name="spacingAfterLast" value="0"/>
        </properties>
    </rule>

    <!-- One blank line before and after each member var except first and last -->
    <rule ref="Squiz.WhiteSpace.MemberVarSpacing">
        <properties>
            <property name="spacing" value="1" />
            <property name="spacingBeforeFirst" value="0" />
        </properties>
    </rule>

    <!-- One space before and after each operator -->
    <rule ref="Squiz.WhiteSpace.OperatorSpacing">
        <properties>
            <property name="ignoreNewlines" value="true"/>
            <property name="ignoreSpacingBeforeAssignments" value="false"/>
        </properties>
    </rule>

    <!-- Use exactly one space before and after dot (.) in string concatenating -->
    <rule ref="Squiz.Strings.ConcatenationSpacing">
        <properties>
            <property name="spacing" value="1"/>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>

    <!-- No underscore in variable names - disabled while $row->property_with_underscore will not be allowed -->
<!--    <rule ref="Squiz.NamingConventions.ValidVariableName"/>-->
<!--    <rule ref="Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore">-->
<!--        <severity>0</severity>-->
<!--    </rule>-->

    <!-- No underscore in method names -->
    <rule ref="Squiz.NamingConventions.ValidFunctionName"/>
    <rule ref="Squiz.NamingConventions.ValidFunctionName.PrivateNoUnderscore">
        <severity>0</severity>
    </rule>

    <!-- Prefer to use single quotes over double quotes -->
    <rule ref="Squiz.Strings.DoubleQuoteUsage.NotRequired" />

    <!-- Requires 0 spaces after reference. -->
    <rule ref="SlevomatCodingStandard.PHP.ReferenceSpacing">
        <properties>
            <property name="spacesCountAfterReference" value="0"/>
        </properties>
    </rule>

    <!-- Requires only one namespace in a file. -->
    <rule ref="SlevomatCodingStandard.Namespaces.RequireOneNamespaceInFile"/>

    <!-- Enforces one space after namespace, disallows content between namespace name and semicolon and disallows use of bracketed syntax. -->
    <rule ref="SlevomatCodingStandard.Namespaces.NamespaceDeclaration"/>

    <!-- Require exactly one empty line before and one after namespace line -->
    <rule ref="SlevomatCodingStandard.Namespaces.NamespaceSpacing"/>

    <!-- No empty lines between uses  -->
    <rule ref="SlevomatCodingStandard.Namespaces.UseSpacing"/>

    <!-- No empty lines between trait uses  -->
    <rule ref="SlevomatCodingStandard.Classes.TraitUseSpacing">
        <properties>
            <property name="linesCountBeforeFirstUse" value="0"/>
            <property name="linesCountAfterLastUseWhenLastInClass" value="0"/>
        </properties>
    </rule>

    <!-- Require no whitespace between parenthesis and return type colon, one space between return type colon and return type -->
    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing"/>

    <!-- Requires new with parentheses. -->
    <rule ref="SlevomatCodingStandard.ControlStructures.NewWithParentheses"/>

    <!-- Trailing comma after last element of array -->
    <rule ref="SlevomatCodingStandard.Arrays.TrailingArrayComma"/>

    <!-- Requires all names as reference - no fully qualified or partial names -->
    <rule ref="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly">
        <properties>
            <property name="searchAnnotations" value="true"/>
            <property name="allowPartialUses" value="false"/>
        </properties>
    </rule>

    <!-- Requires all uses to be used -->
    <rule ref="SlevomatCodingStandard.Namespaces.UnusedUses">
        <properties>
            <property name="searchAnnotations" value="true"/>
        </properties>
    </rule>

    <!-- Disallow leading backslash for uses -->
    <rule ref="SlevomatCodingStandard.Namespaces.UseDoesNotStartWithBackslash"/>

    <!-- Alphabetically sorted uses  -->
    <rule ref="SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses"/>

    <!-- Checks that there's a single space between a typehint and a property name  -->
    <rule ref="SlevomatCodingStandard.Classes.PropertyDeclaration">
        <properties>
            <property name="checkPromoted" value="true"/>
            <property name="enableMultipleSpacesBetweenModifiersCheck" value="true"/>
        </properties>
    </rule>

    <!-- Check duplicate spaces everywhere -->
    <rule ref="SlevomatCodingStandard.Whitespaces.DuplicateSpaces">
        <properties>
            <property name="ignoreSpacesInAnnotation" value="true"/>
            <property name="ignoreSpacesInComment" value="true"/>
        </properties>
    </rule>

    <!-- Structure of classes -->
    <rule ref="SlevomatCodingStandard.Classes.ClassStructure">
        <properties>
            <property name="groups" type="array">
                <element value="uses"/>
                <element value="enum cases"/>
                <element value="constants"/>
                <element value="properties"/>
                <element value="constructor"/>
                <element value="methods"/>
            </property>
        </properties>
    </rule>

    <!-- Class constants visibility -->
    <rule ref="SlevomatCodingStandard.Classes.ClassConstantVisibility"/>

    <!-- Single space between type and property name -->
    <rule ref="SlevomatCodingStandard.Classes.PropertyDeclaration"/>

    <!-- Exactly one blank line between methods -->
    <rule ref="SlevomatCodingStandard.Classes.MethodSpacing">
        <properties>
            <property name="minLinesCount" value="1"/>
            <property name="maxLinesCount" value="2"/>
        </properties>
    </rule>

    <!-- Useless comments -->
    <rule ref="SlevomatCodingStandard.Commenting.UselessFunctionDocComment"/>
</ruleset>
